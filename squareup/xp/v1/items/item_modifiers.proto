package squareup.xp.v1.items;

option java_package = "com.squareup.protos.xp.v1.items";
option java_generic_services = true;
option java_multiple_files = true;

import "fender/v1/field_options.proto";
import "public/money.proto";
import "squareup/xp/v1/common.proto";
import "squareup/xp/v1/items/data/item_modifiers.proto";

/**
 * Creates an item modifier list and at least one modifier option for it.
 *
 * Required permissions: ITEMS\_WRITE
 */
message ModifierListCreateRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];

  /**
   * The modifier list's name.
   */
  optional string name = 2 [(fender.v1.fender_field).max = 255];

  optional int32 ordinal = 3 [ default = 0 ];

  /** Indicates whether multiple options from the modifier list can be applied to a single item. */
  optional data.ItemModifierList.SelectionType selection_type = 4 [default = SINGLE];

  /** The options included in the modifier list. You must include at least one modifier option. */
  repeated data.ItemModifierOption modifier_options = 5;
}

/**
 * Lists all of a merchant's modifier lists.
 *
 * Required permissions: ITEMS\_READ
 */
message ModifierListListRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];
}

message ModifierListListResponse {
  repeated data.ItemModifierList modifier_lists = 1;
}

/**
 * Retreive a merchant's modifier list.
 *
 * Required permissions: ITEMS\_READ
 */
message ModifierListShowRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];

  /** The Modifier List id */
  optional string modifier_list_id = 2 [(fender.v1.fender_field).present = true];
}

/**
 * Modifies the details of an existing item modifier list.
 *
 * If you want to modify the details of a single modifier option, use the Update Modifier Option endpoint instead.
 *
 * Required permissions: ITEMS\_WRITE
 */
message ModifierListUpdateRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];


  /**
   * The of the modifier list to edit.
   */
  optional data.ItemModifierList modifier_list = 2 [(fender.v1.fender_field).present = true];
}

/**
 * Deletes an existing item modifier list and all modifier options associated with it.
 *
 * Required permissions: ITEMS\_WRITE
 */
message ModifierListDeleteRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];

  /** The ID of the modifier list to delete. */
  optional string modifier_list_id = 2 [(fender.v1.fender_field).present = true];
}

/**
 * Associates/Removes a modifier list with an item, meaning modifier options from the list can be applied to the item.
 *
 * Required permissions: ITEMS\_WRITE
 */
message MemberModifierListRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];

  /** The ID of the item to remove the modifier list from. */
  optional string item_id = 2 [(fender.v1.fender_field).present = true];

  /** The ID of the modifier list to remove. */
  optional string modifier_list_id = 3 [(fender.v1.fender_field).present = true];
}

/**
 * Creates an item modifier option and adds it to a modifier list.
 *
 * Required permissions: ITEMS\_WRITE
 */
message ModifierOptionCreateRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true ];

  /** The modifier option's price. */
  optional public.Money price_money = 2 [(fender.v1.fender_field).present = true];

  /** If true, the modifier option is the default option in a modifier list for which selection_type is SINGLE. */
  optional bool on_by_default = 3 [ default = false ];

  /** The modifier option's name. */
  optional string name = 4 [(fender.v1.fender_field) = { max: 255, present: true }];
  optional int32 ordinal = 5;

  /** The ID of the modifier list to add the option to. */
  optional string modifier_list_id = 6 [(fender.v1.fender_field).present = true];
}

/**
 * Modifies the details of an existing item modifier option.
 *
 * Required permissions: ITEMS\_WRITE
 */
message ModifierOptionUpdateRequest {
  /** 
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];


  /** The modifier option to update */
  optional data.ItemModifierOption modifier_option = 2 [(fender.v1.fender_field).present = true];
}

/**
 * Deletes an existing item modifier option from a modifier list.
 *
 * Every modifier list must have at least one option.
 * This endpoint returns an error if you attempt to delete a modifier list's only option.
 *
 * Required permissions: ITEMS\_WRITE
 */
message ModifierOptionDeleteRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [ default = "me", (fender.v1.fender_field).present = true];

  /** The ID of the modifier option to delete. */
  optional string modifier_option_id = 2 [(fender.v1.fender_field).present = true];

  /** The ID of the modifier list that contains the option. */
  optional string modifier_list_id = 3 [(fender.v1.fender_field).present = true];
}
