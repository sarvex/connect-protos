package squareup.xp.v1.items;

option java_package = "com.squareup.protos.xp.v1.items";
option java_generic_services = true;
option java_multiple_files = true;

import "fender/v1/field_options.proto";
import "squareup/xp/v1/common.proto";
import "squareup/xp/v1/items/data/page.proto";
import "squareup/xp/v1/items/data/placeholder.proto";

/**
 * Creates a Favorites page in Square Register.
 *
 * A merchant can have up to five pages, each of which has a page_index between 0 and 4, inclusive.
 *
 * After you create a page, you can set the values of its cells with the Update Cell endpoint.
 * A page doesn't appear in Square Register unless at least one of its cells has an assigned value.
 *
 * Required permissions: ITEMS\_WRITE
 */
message PageCreateRequest {
  /** 
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [(fender.v1.fender_field).present = true];

  /** The page's name, if any. */
  optional string name = 2 [(fender.v1.fender_field).max = 255];

  /** The page's position in the merchant's list of pages. Always an integer between 0 and 4, inclusive. */
  optional int32 page_index = 3 [(fender.v1.fender_field).max = 4, (fender.v1.fender_field).present = true];
}

/**
 * Lists all of a merchant's Favorites pages in Square Register.
 *
 * Required permissions: ITEMS\_READ
 */
message PageListRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [(fender.v1.fender_field).present = true];
}

message PageListResponse {
  repeated data.Page pages = 1;
}

/**
 * Modifies the details of a Favorites page in Square Register.
 *
 * Required permissions: ITEMS\_WRITE
 */
message PageUpdateRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [(fender.v1.fender_field).present = true];

  /** The page to update */
  optional data.Page page = 2 [(fender.v1.fender_field).present = true];
}

/**
 * Deletes an existing Favorites page and all of its cells.
 *
 * Required permissions: ITEMS\_WRITE
 */
message PageDeleteRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [(fender.v1.fender_field).present = true];

  /** The ID of the page to delete. */
  optional string page_id = 2 [(fender.v1.fender_field).present = true];
}

/**
 * Modifies a cell of a Favorites page in Square Register.
 *
 * Required permissions: ITEMS\_WRITE
 */
message PageSetCellRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [(fender.v1.fender_field).present = true];

  /** The cell to set */
  optional data.PageCell page_cell = 2 [(fender.v1.fender_field).present = true];
}

/**
 * Deletes a cell from a Favorites page in Square Register.
 *
 * Required permissions: ITEMS\_WRITE
 */
message PageClearCellRequest {
  /**
   * Your Square-issued ID, if you've obtained it from another endpoint.
   *
   * If you haven't, specify me to automatically determine your merchant ID based on your request's access token.
   */
  optional string catalog_id = 1 [(fender.v1.fender_field).present = true];

  /** The ID of the page the cell belongs to. */
  optional string page_id = 2 [(fender.v1.fender_field).present = true];

  /**
   * The row of the cell to clear.
   * Always an integer between 0 and 4, inclusive.
   * Row 0 is the top row.
   */
  optional int32 row = 3 [(fender.v1.fender_field) = { max: 4, min: 0, present: true }];


  /**
   * The colum of the cell to clear.
   * Always an integer between 0 and 4, inclusive.
   * Row 0 is the top row.
   */
  optional int32 column = 4 [(fender.v1.fender_field) = { max: 4, min: 0, present: true }];
}

